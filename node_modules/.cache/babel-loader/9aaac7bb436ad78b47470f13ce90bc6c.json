{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\projects\\\\sabzlearn\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRoutes } from \"react-router-dom\";\nimport AuthContext from \"./context/authContext\";\nimport routes from \"./routes\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(false);\n  const [userInfos, setUserInfos] = useState({});\n  const router = useRoutes(routes);\n\n  const login = (token, user) => {\n    setToken(token);\n    setIsLoggedIn(true);\n    localStorage.setItem('user', JSON.stringify({\n      token\n    }));\n    setUserInfos();\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUserInfos({});\n    localStorage.removeItem('user');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      token,\n      userInfos,\n      login,\n      logout\n    },\n    children: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rEsMHg2w8KP4vnjKXGz+s2y5b7E=\", false, function () {\n  return [useRoutes];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRoutes","AuthContext","routes","App","isLoggedIn","setIsLoggedIn","token","setToken","userInfos","setUserInfos","router","login","user","localStorage","setItem","JSON","stringify","logout","removeItem"],"sources":["D:/programming/projects/sabzlearn/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useRoutes } from \"react-router-dom\";\nimport AuthContext from \"./context/authContext\";\nimport routes from \"./routes\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(false);\n  const [userInfos, setUserInfos] = useState({});\n\n  const router = useRoutes(routes);\n\n  const login = (token,user) => {\n    setToken(token)\n    setIsLoggedIn(true)\n    localStorage.setItem('user', JSON.stringify({ token }))\n    setUserInfos()\n  }\n\n  const logout = () => {\n    setToken(null)\n    setUserInfos({})\n    localStorage.removeItem('user')\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn,\n        token,\n        userInfos,\n        login,\n        logout,\n      }}\n    >\n      {router}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,WAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAMW,MAAM,GAAGV,SAAS,CAACE,MAAD,CAAxB;;EAEA,MAAMS,KAAK,GAAG,CAACL,KAAD,EAAOM,IAAP,KAAgB;IAC5BL,QAAQ,CAACD,KAAD,CAAR;IACAD,aAAa,CAAC,IAAD,CAAb;IACAQ,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe;MAAEV;IAAF,CAAf,CAA7B;IACAG,YAAY;EACb,CALD;;EAOA,MAAMQ,MAAM,GAAG,MAAM;IACnBV,QAAQ,CAAC,IAAD,CAAR;IACAE,YAAY,CAAC,EAAD,CAAZ;IACAI,YAAY,CAACK,UAAb,CAAwB,MAAxB;EACD,CAJD;;EAMA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLd,UADK;MAELE,KAFK;MAGLE,SAHK;MAILG,KAJK;MAKLM;IALK,CADT;IAAA,UASGP;EATH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAjCuBP,G;UAKPH,S;;;KALOG,G"},"metadata":{},"sourceType":"module"}