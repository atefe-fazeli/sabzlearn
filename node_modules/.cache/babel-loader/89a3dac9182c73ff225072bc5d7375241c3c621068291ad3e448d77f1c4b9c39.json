{"ast":null,"code":"import rules from \"./rules\";\nconst validator = (value, validations) => {\n  let validationResults = [];\n  for (const validator of validations) {\n    if (validator.value === rules.requiredValue) {\n      value.trim().length === 0 && validationResults.push(false);\n    }\n    if (validator.value === rules.minValue) {\n      value.trim().length < validator.min && validationResults.push(false);\n    }\n    if (validator.value === rules.maxValue) {\n      value.trim().length > validator.max && validationResults.push(false);\n    }\n    if (validator.value === rules.emailValue) {\n      !value.trim().includes(\"@\") && validationResults.push(false);\n    }\n  }\n  if (validationResults.length) {\n    return false;\n  } else {\n    return true;\n  }\n};\nexport default validator;","map":{"version":3,"names":["rules","validator","value","validations","validationResults","requiredValue","trim","length","push","minValue","min","maxValue","max","emailValue","includes"],"sources":["D:/programming/projects/sabzlearn/src/validators/validator.js"],"sourcesContent":["import rules from \"./rules\";\n\nconst validator = (value, validations) => {\n\n  let validationResults = [];\n\n  for (const validator of validations) {\n    if (validator.value === rules.requiredValue) {\n      value.trim().length === 0 && validationResults.push(false);\n    }\n    if (validator.value === rules.minValue) {\n      value.trim().length < validator.min && validationResults.push(false);\n    }\n    if (validator.value === rules.maxValue) {\n      value.trim().length > validator.max && validationResults.push(false);\n    }\n    if (validator.value === rules.emailValue) {\n      !value.trim().includes(\"@\") && validationResults.push(false);\n    }\n  }\n\n  if (validationResults.length) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default validator;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAE3B,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAAK;EAExC,IAAIC,iBAAiB,GAAG,EAAE;EAE1B,KAAK,MAAMH,SAAS,IAAIE,WAAW,EAAE;IACnC,IAAIF,SAAS,CAACC,KAAK,KAAKF,KAAK,CAACK,aAAa,EAAE;MAC3CH,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IAAIH,iBAAiB,CAACI,IAAI,CAAC,KAAK,CAAC;IAC5D;IACA,IAAIP,SAAS,CAACC,KAAK,KAAKF,KAAK,CAACS,QAAQ,EAAE;MACtCP,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,GAAGN,SAAS,CAACS,GAAG,IAAIN,iBAAiB,CAACI,IAAI,CAAC,KAAK,CAAC;IACtE;IACA,IAAIP,SAAS,CAACC,KAAK,KAAKF,KAAK,CAACW,QAAQ,EAAE;MACtCT,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,GAAGN,SAAS,CAACW,GAAG,IAAIR,iBAAiB,CAACI,IAAI,CAAC,KAAK,CAAC;IACtE;IACA,IAAIP,SAAS,CAACC,KAAK,KAAKF,KAAK,CAACa,UAAU,EAAE;MACxC,CAACX,KAAK,CAACI,IAAI,CAAC,CAAC,CAACQ,QAAQ,CAAC,GAAG,CAAC,IAAIV,iBAAiB,CAACI,IAAI,CAAC,KAAK,CAAC;IAC9D;EACF;EAEA,IAAIJ,iBAAiB,CAACG,MAAM,EAAE;IAC5B,OAAO,KAAK;EACd,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAeN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}