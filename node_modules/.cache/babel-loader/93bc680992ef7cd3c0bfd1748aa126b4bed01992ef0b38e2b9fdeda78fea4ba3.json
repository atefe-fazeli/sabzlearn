{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming\\\\projects\\\\sabzlearn\\\\src\\\\shared\\\\Form\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from \"react\";\nimport validator from \"../../validators/validator\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      {\n        return {\n          ...state,\n          value: action.value,\n          isValid: validator(action.value, action.validations)\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport default function Input(props) {\n  _s();\n  const [mainInput, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const {\n    value,\n    isValid\n  } = mainInput;\n  const {\n    id,\n    onInputHandler\n  } = props;\n  useEffect(() => {\n    onInputHandler(id, value, isValid);\n  }, [value]);\n  const onChangeHandler = event => {\n    console.log(event.target.value);\n    dispatch({\n      type: \"CHANGE\",\n      value: event.target.value,\n      validations: props.validations,\n      isValid: true\n    });\n  };\n  const element = props.element === \"input\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n    type: props.type,\n    placeholder: props.placeholder,\n    className: `${props.className} ${mainInput.isValid ? \"success\" : \"error\"}`,\n    value: mainInput.value,\n    onChange: onChangeHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    placeholder: props.placeholder,\n    className: `${props.className} ${mainInput.isValid ? \"success\" : \"error\"}`,\n    onChange: onChangeHandler,\n    value: mainInput.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_s(Input, \"e19WZ8vLp/vInRuP7Pr5gr9mPpg=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useEffect","useReducer","validator","jsxDEV","_jsxDEV","inputReducer","state","action","type","value","isValid","validations","Input","props","_s","mainInput","dispatch","id","onInputHandler","onChangeHandler","event","console","log","target","element","placeholder","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["D:/programming/projects/sabzlearn/src/shared/Form/Input.js"],"sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport validator from \"../../validators/validator\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\": {\n      return {\n        ...state,\n        value: action.value,\n        isValid: validator(action.value, action.validations),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default function Input(props) {\n  const [mainInput, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const { value, isValid } = mainInput;\n  const { id, onInputHandler } = props;\n\n  useEffect(() => {\n    onInputHandler(id, value, isValid);\n  }, [value]);\n\n  const onChangeHandler = (event) => {\n    console.log(event.target.value);\n    dispatch({\n      type: \"CHANGE\",\n      value: event.target.value,\n      validations: props.validations,\n      isValid: true,\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        type={props.type}\n        placeholder={props.placeholder}\n        className={`${props.className} ${\n          mainInput.isValid ? \"success\" : \"error\"\n        }`}\n        value={mainInput.value}\n        onChange={onChangeHandler}\n      />\n    ) : (\n      <textarea\n        placeholder={props.placeholder}\n        className={`${props.className} ${\n          mainInput.isValid ? \"success\" : \"error\"\n        }`}\n        onChange={onChangeHandler}\n        value={mainInput.value}\n      />\n    );\n\n  return <div>{element}</div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,OAAOC,SAAS,MAAM,4BAA4B;AAElD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,QAAQ;MAAE;QACb,OAAO;UACL,GAAGF,KAAK;UACRG,KAAK,EAAEF,MAAM,CAACE,KAAK;UACnBC,OAAO,EAAER,SAAS,CAACK,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACI,WAAW;QACrD,CAAC;MACH;IACA;MAAS;QACP,OAAOL,KAAK;MACd;EACF;AACF,CAAC;AAED,eAAe,SAASM,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACI,YAAY,EAAE;IACrDI,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM;IAAED,KAAK;IAAEC;EAAQ,CAAC,GAAGK,SAAS;EACpC,MAAM;IAAEE,EAAE;IAAEC;EAAe,CAAC,GAAGL,KAAK;EAEpCb,SAAS,CAAC,MAAM;IACdkB,cAAc,CAACD,EAAE,EAAER,KAAK,EAAEC,OAAO,CAAC;EACpC,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,MAAMU,eAAe,GAAIC,KAAK,IAAK;IACjCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACd,KAAK,CAAC;IAC/BO,QAAQ,CAAC;MACPR,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAEW,KAAK,CAACG,MAAM,CAACd,KAAK;MACzBE,WAAW,EAAEE,KAAK,CAACF,WAAW;MAC9BD,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMc,OAAO,GACXX,KAAK,CAACW,OAAO,KAAK,OAAO,gBACvBpB,OAAA;IACEI,IAAI,EAAEK,KAAK,CAACL,IAAK;IACjBiB,WAAW,EAAEZ,KAAK,CAACY,WAAY;IAC/BC,SAAS,EAAE,GAAGb,KAAK,CAACa,SAAS,IAC3BX,SAAS,CAACL,OAAO,GAAG,SAAS,GAAG,OAAO,EACtC;IACHD,KAAK,EAAEM,SAAS,CAACN,KAAM;IACvBkB,QAAQ,EAAER;EAAgB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC,gBAEF3B,OAAA;IACEqB,WAAW,EAAEZ,KAAK,CAACY,WAAY;IAC/BC,SAAS,EAAE,GAAGb,KAAK,CAACa,SAAS,IAC3BX,SAAS,CAACL,OAAO,GAAG,SAAS,GAAG,OAAO,EACtC;IACHiB,QAAQ,EAAER,eAAgB;IAC1BV,KAAK,EAAEM,SAAS,CAACN;EAAM;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CACF;EAEH,oBAAO3B,OAAA;IAAA4B,QAAA,EAAMR;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7B;AAACjB,EAAA,CA9CuBF,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}