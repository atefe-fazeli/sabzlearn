{"ast":null,"code":"import rules from \"./rules\";\nimport regex from \"./regex\";\n\nconst validator = (value, validations) => {\n  let validationResults = [];\n\n  for (const validator of validations) {\n    if (validator.value === rules.requiredValue) {\n      value.trim().length === 0 && validationResults.push(false);\n    }\n\n    if (validator.value === rules.minValue) {\n      value.trim().length < validator.min && validationResults.push(false);\n    }\n\n    if (validator.value === rules.maxValue) {\n      value.trim().length > validator.max && validationResults.push(false);\n    }\n\n    if (validator.value === rules.emailValue) {\n      !regex.testEmail(value) && validationResults.push(false);\n    }\n  }\n\n  if (validationResults.length) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default validator;","map":{"version":3,"names":["rules","regex","validator","value","validations","validationResults","requiredValue","trim","length","push","minValue","min","maxValue","max","emailValue","testEmail"],"sources":["D:/programming/projects/sabzlearn/frontend/src/validators/validator.js"],"sourcesContent":["import rules from \"./rules\";\nimport regex from \"./regex\";\n\nconst validator = (value, validations) => {\n\n  let validationResults = [];\n\n  for (const validator of validations) {\n    if (validator.value === rules.requiredValue) {\n      value.trim().length === 0 && validationResults.push(false);\n    }\n    if (validator.value === rules.minValue) {\n      value.trim().length < validator.min && validationResults.push(false);\n    }\n    if (validator.value === rules.maxValue) {\n      value.trim().length > validator.max && validationResults.push(false);\n    }\n    if (validator.value === rules.emailValue) {\n      !regex.testEmail(value) && validationResults.push(false);\n    }\n  }\n\n  if (validationResults.length) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default validator;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;EAExC,IAAIC,iBAAiB,GAAG,EAAxB;;EAEA,KAAK,MAAMH,SAAX,IAAwBE,WAAxB,EAAqC;IACnC,IAAIF,SAAS,CAACC,KAAV,KAAoBH,KAAK,CAACM,aAA9B,EAA6C;MAC3CH,KAAK,CAACI,IAAN,GAAaC,MAAb,KAAwB,CAAxB,IAA6BH,iBAAiB,CAACI,IAAlB,CAAuB,KAAvB,CAA7B;IACD;;IACD,IAAIP,SAAS,CAACC,KAAV,KAAoBH,KAAK,CAACU,QAA9B,EAAwC;MACtCP,KAAK,CAACI,IAAN,GAAaC,MAAb,GAAsBN,SAAS,CAACS,GAAhC,IAAuCN,iBAAiB,CAACI,IAAlB,CAAuB,KAAvB,CAAvC;IACD;;IACD,IAAIP,SAAS,CAACC,KAAV,KAAoBH,KAAK,CAACY,QAA9B,EAAwC;MACtCT,KAAK,CAACI,IAAN,GAAaC,MAAb,GAAsBN,SAAS,CAACW,GAAhC,IAAuCR,iBAAiB,CAACI,IAAlB,CAAuB,KAAvB,CAAvC;IACD;;IACD,IAAIP,SAAS,CAACC,KAAV,KAAoBH,KAAK,CAACc,UAA9B,EAA0C;MACxC,CAACb,KAAK,CAACc,SAAN,CAAgBZ,KAAhB,CAAD,IAA2BE,iBAAiB,CAACI,IAAlB,CAAuB,KAAvB,CAA3B;IACD;EACF;;EAED,IAAIJ,iBAAiB,CAACG,MAAtB,EAA8B;IAC5B,OAAO,KAAP;EACD,CAFD,MAEO;IACL,OAAO,IAAP;EACD;AACF,CAxBD;;AA0BA,eAAeN,SAAf"},"metadata":{},"sourceType":"module"}